#!/bin/bash
ALL_ARGS=$@

command=$1


VALIDATE_SMILES="false"
CANONICALIZE_SMILES="false"

for x in $ALL_ARGS
do 
HELP=$x;

if [ "$x" = "--validate-smiles" ]; then
    VALIDATE_SMILES="true" ; 
fi

if [ "$x" = "--canonicalize-smiles" ]; then
    CANONICALIZE_SMILES="true" ; 
fi

done

while [ $# -gt 0 ]; do
    if [[ $1 == "--"* ]]; then
        v="${1/--/}"
        declare "$v"="$2"
        shift
    fi
    shift
done



if [ "$command" = "start_app" ]; then
    cheese-app

elif [ "$command" = "update" ]; then
    update-cheese

elif [ "$command" = "inference" ]; then
    if [ "$HELP" = "--help" ]; then
        sudo docker run -it --entrypoint "python" -v /data:/data -u root --env PORT=$DB_PORT --env CONFIG_FILE=$CONFIG_FILE --env LICENSING=$LICENSING --env CHEESE_LICENSE_FILE=$LICENSE_FILE --rm $DB_IMAGE -c 'import cheese_database.cheese_cli as cli; cli.app();' $ALL_ARGS
    else
        cheese-inference --input_file $input_file --dest $dest --valid_smiles $VALIDATE_SMILES --canonical_smiles $CANONICALIZE_SMILES --index_type $index_type
    fi

elif [ "$command" = "embeddings_gpu" ]; then
    if [ "$HELP" = "--help" ]; then
        sudo docker run -it --entrypoint "python" -v /data:/data -u root --env PORT=$DB_PORT --env CONFIG_FILE=$CONFIG_FILE --env LICENSING=$LICENSING --env CHEESE_LICENSE_FILE=$LICENSE_FILE --rm $DB_IMAGE -c 'import cheese_database.cheese_cli as cli; cli.app();' $ALL_ARGS
    else
        cheese-embeddings --input_file $input_file --dest $dest --save_format $save_format;
    fi
else
    sudo docker run -it --entrypoint "python" -v /data:/data -u root --env PORT=$DB_PORT --env CONFIG_FILE=$CONFIG_FILE --env LICENSING=$LICENSING --env CHEESE_LICENSE_FILE=$LICENSE_FILE --rm $DB_IMAGE -c 'import cheese_database.cheese_cli as cli; cli.app();' $ALL_ARGS
fi
